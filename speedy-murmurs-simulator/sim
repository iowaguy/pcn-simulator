#!/bin/bash

LOG_DIR=logs
EXPERIMENT_LOG=${LOG_DIR}/experiment-`hostname`-`date +%m-%d-%y-%H:%M:%S`.out
IPYTHON_HOME=${HOME}/.ipython
IPCLUSTER_DIR=${IPYTHON_HOME}/`hostname`/
SCRIPTS_DIR="scripts"

usage() {
  echo "Usage: $0 [start|stop|status|experiment|controller|engines]" 1>&2
  exit 1
}

stop_proc() {
  proc_name="$1"
  ps -ef | grep "${proc_name}" | grep -v grep | awk '{print $2}' | xargs kill -9 &> /dev/null
}

stop() {
#  ipcluster stop #--IPClusterApp.ipython_dir=${IPCLUSTER_DIR}
#  echo "ipcluster killed."

  stop_proc ipcontroller
  stop_proc ipengine
  stop_proc ipyparallel
  stop_proc ipcluster
  stop_proc experiment
  stop_proc java
  echo "Experiment killed."
  exit 0
}

status() {
  lines=$(ps -ef | grep ipcluster | grep -v grep | wc -l)
  if [ $lines -gt 0 ]; then
    echo "ipcluster is running..."
  else
    echo "ipcluster is not running..."
  fi

  lines=$(ps -ef | grep attack | grep -v grep | wc -l)
  if [ $lines -gt 0 ]; then
    echo "experiment is running..."
  fi

  exit 0
}

controller() {
  nohup ipcontroller --ip='*' &> logs/controller.log &
  #exec tail -f logs/controller.log
  exit 0
}

engines() {
  ENGINES=$1
  for i in `seq $ENGINES`; do  
      nohup ipengine &> logs/engine-$(hostname)-${i}.log &
  done
  exec tail -f logs/engine-$(hostname)-${ENGINES}.log
}

start() {
  ENGINES="$1"
  ipcluster start --daemonize=True -n "${ENGINES}" --ProfileDir.location="${IPCLUSTER_DIR}"
  echo "${IPCLUSTER_DIR}/log/ipcluster-*.log"
  exec tail -f ${IPCLUSTER_DIR}/log/ipcluster-*.log
}

experiment() {
  EXPERIMENT_TYPE="$1"
  if [ -f "${EXPERIMENT_LOG}" ]; then
      mv "${EXPERIMENT_LOG}" "${EXPERIMENT_LOG}-$(date +%m-%d-%y-%H:%M:%S)"
  fi
  nohup python experiments.py "${EXPERIMENT_TYPE}" &> "${EXPERIMENT_LOG}" &
  sleep 1
  if [ "$EXPERIMENT_TYPE" -ne "list" ]; then
    echo "Experiment started" > $(head -n1 ${EXPERIMENT_LOG})
  fi
  echo "${EXPERIMENT_LOG}"
  cat "${EXPERIMENT_LOG}"
  exit 0
}

single() {
  #nohup java -cp target/pcn-simulator-1.0-SNAPSHOT-jar-with-dependencies.jar treeembedding.runners.Dynamic data/dynamic-id3-dynamic-baseline-sequential/dynamic-id3-ripple-dynamic-silentwhispers-3-1-1-lat0ms/ &
  run_config_path=$1
  nohup java -cp target/pcn-simulator-1.0-SNAPSHOT-jar-with-dependencies.jar treeembedding.runners.Dynamic "$run_config_path" &
  exit 0
}

mkdir -p ${LOG_DIR}
while :; do
  case "$1" in
    start)
      start "$2"
      ;;
    stop)
      stop
      ;;
    status)
      status
      ;;
    exp|experiment)
      experiment "$2"
      ;;
    single)
      single "$2"
      ;;
    controller)
      controller
      ;;
    engines)
      engines "$2"
      ;;
    *)
      usage
      ;;
  esac
done
shift $((OPTIND-1))



